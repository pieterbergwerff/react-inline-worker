{"version":3,"file":"static/webpack/static/development/pages/index.js.cc1bf03af3161fdfa69d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport InlineWorker from '../src';\nimport { Row, Col, Card, Icon, Spin, Divider, Button, Alert } from 'antd';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/styles/hljs';\nimport '../style/main.css';\nimport 'antd/dist/antd.css';\n\nconst fn = () => {\n\tself.onmessage = ({ data }) => {\n\t\tvar to = setTimeout(() => {\n\t\t\tpostMessage('Hello world!');\n\t\t}, 1000);\n\t};\n};\n\nexport default () => (\n\t<div>\n\t\t<Row>\n\t\t\t<Col span={1}>&nbsp;</Col>\n\t\t\t<Col span={22}>\n\t\t\t\t<Card\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Icon type=\"info-circle\" theme=\"twoTone\" />\n\t\t\t\t\t\t\t&nbsp;&nbsp;react-inline-worker\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Example\n\t\t\t\t\t\ttitle=\"Get a 'Hello world!'\"\n\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tUse the worker to receive a simple <i>Hello world</i>.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcode={[\n\t\t\t\t\t\t\t`import React from 'react';`,\n\t\t\t\t\t\t\t`import InlineWorker from 'react-inline-worker';`,\n\t\t\t\t\t\t\t``,\n\t\t\t\t\t\t\t`function fn(){`,\n\t\t\t\t\t\t\t`  postMessage('Hello world!');`,\n\t\t\t\t\t\t\t`}`,\n\t\t\t\t\t\t\t``,\n\t\t\t\t\t\t\t`function HelloWorldExample(){`,\n\t\t\t\t\t\t\t`  return <InlineWorker fn={fn}>{({ loading, error, data }) => {`,\n\t\t\t\t\t\t\t`    if (loading) return 'loading...';`,\n\t\t\t\t\t\t\t`    if (error) return 'Errors!';`,\n\t\t\t\t\t\t\t`    console.log(data); // Hello world!`,\n\t\t\t\t\t\t\t`    return <div>Message from worker: {data}</div>;`,\n\t\t\t\t\t\t\t`  }}</InlineWorker>;`,\n\t\t\t\t\t\t\t`}`,\n\t\t\t\t\t\t\t``,\n\t\t\t\t\t\t\t`export default HelloWorldExample;`,\n\t\t\t\t\t\t].join('\\n')}\n\t\t\t\t\t\tRunComponent={({ onReady }) => {\n\t\t\t\t\t\t\tfunction fn() {\n\t\t\t\t\t\t\t\tpostMessage('Hello world!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<InlineWorker fn={fn}>\n\t\t\t\t\t\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(data); // Hello world!\n\t\t\t\t\t\t\t\t\t\tonReady();\n\t\t\t\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</InlineWorker>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Example\n\t\t\t\t\t\ttitle=\"MyExample2\"\n\t\t\t\t\t\tdescription=\"This is a example\"\n\t\t\t\t\t\tcode={`var test2 = false;`}\n\t\t\t\t\t\tresult=\"ahaight\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Example\n\t\t\t\t\t\ttitle=\"MyExample3\"\n\t\t\t\t\t\tdescription=\"This is a example\"\n\t\t\t\t\t\tcode={`var test3 = \"myCode\";`}\n\t\t\t\t\t\tresult=\"ahaight\"\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\t\t\t<Col span={1}>&nbsp;</Col>\n\t\t</Row>\n\t</div>\n);\n\nclass Example extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trunning: false,\n\t\t\tloading: false,\n\t\t};\n\t}\n\trender() {\n\t\tconst { title, description, code, RunComponent } = this.props;\n\t\tconst { running, loading } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"example\">\n\t\t\t\t<Divider>{title}</Divider>\n\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t<Col span={18}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t\t\t<div className=\"block\">\n\t\t\t\t\t\t\t\t<SyntaxHighlighter language=\"javascript\" style={docco}>\n\t\t\t\t\t\t\t\t\t{code}\n\t\t\t\t\t\t\t\t</SyntaxHighlighter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={loading ? true : false}\n\t\t\t\t\t\t\t\tonClick={() => this.setState({ running: true })}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{loading ? <Icon type=\"loading\" /> : 'Run'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{running ? (\n\t\t\t\t\t\t\t\t<div className=\"block\">\n\t\t\t\t\t\t\t\t\t<Alert message={<b>Results</b>} type=\"success\" />\n\t\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t\t<RunComponent\n\t\t\t\t\t\t\t\t\t\t\tonReady={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tlet to = setTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t\t\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAmBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApEA;AACA;AAwEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;AAxDA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}